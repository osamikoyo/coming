// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: main.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Homework struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject           string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Teacherfirstname  string `protobuf:"bytes,2,opt,name=teacherfirstname,proto3" json:"teacherfirstname,omitempty"`
	Teachersecondname string `protobuf:"bytes,3,opt,name=teachersecondname,proto3" json:"teachersecondname,omitempty"`
	Date              string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Texthomework      string `protobuf:"bytes,5,opt,name=texthomework,proto3" json:"texthomework,omitempty"`
	Gtoupnumber       int64  `protobuf:"varint,6,opt,name=gtoupnumber,proto3" json:"gtoupnumber,omitempty"`
}

func (x *Homework) Reset() {
	*x = Homework{}
	mi := &file_main_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Homework) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Homework) ProtoMessage() {}

func (x *Homework) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Homework.ProtoReflect.Descriptor instead.
func (*Homework) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{0}
}

func (x *Homework) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Homework) GetTeacherfirstname() string {
	if x != nil {
		return x.Teacherfirstname
	}
	return ""
}

func (x *Homework) GetTeachersecondname() string {
	if x != nil {
		return x.Teachersecondname
	}
	return ""
}

func (x *Homework) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Homework) GetTexthomework() string {
	if x != nil {
		return x.Texthomework
	}
	return ""
}

func (x *Homework) GetGtoupnumber() int64 {
	if x != nil {
		return x.Gtoupnumber
	}
	return 0
}

type ReqHomework struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Homework *Homework `protobuf:"bytes,1,opt,name=homework,proto3" json:"homework,omitempty"`
}

func (x *ReqHomework) Reset() {
	*x = ReqHomework{}
	mi := &file_main_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqHomework) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHomework) ProtoMessage() {}

func (x *ReqHomework) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHomework.ProtoReflect.Descriptor instead.
func (*ReqHomework) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{1}
}

func (x *ReqHomework) GetHomework() *Homework {
	if x != nil {
		return x.Homework
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Studentsfirstname  string `protobuf:"bytes,1,opt,name=studentsfirstname,proto3" json:"studentsfirstname,omitempty"`
	Studentssecondname string `protobuf:"bytes,2,opt,name=studentssecondname,proto3" json:"studentssecondname,omitempty"`
	Email              string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password           string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Token              string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	Commings           uint64 `protobuf:"varint,6,opt,name=commings,proto3" json:"commings,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_main_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetStudentsfirstname() string {
	if x != nil {
		return x.Studentsfirstname
	}
	return ""
}

func (x *User) GetStudentssecondname() string {
	if x != nil {
		return x.Studentssecondname
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *User) GetCommings() uint64 {
	if x != nil {
		return x.Commings
	}
	return 0
}

type UserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserReq) Reset() {
	*x = UserReq{}
	mi := &file_main_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReq) ProtoMessage() {}

func (x *UserReq) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReq.ProtoReflect.Descriptor instead.
func (*UserReq) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{3}
}

func (x *UserReq) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type Comming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject            string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Studentsfirstname  string `protobuf:"bytes,2,opt,name=studentsfirstname,proto3" json:"studentsfirstname,omitempty"`
	Studentssecondname string `protobuf:"bytes,3,opt,name=studentssecondname,proto3" json:"studentssecondname,omitempty"`
	Date               string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Part               int64  `protobuf:"varint,5,opt,name=part,proto3" json:"part,omitempty"`
}

func (x *Comming) Reset() {
	*x = Comming{}
	mi := &file_main_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comming) ProtoMessage() {}

func (x *Comming) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comming.ProtoReflect.Descriptor instead.
func (*Comming) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{4}
}

func (x *Comming) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Comming) GetStudentsfirstname() string {
	if x != nil {
		return x.Studentsfirstname
	}
	return ""
}

func (x *Comming) GetStudentssecondname() string {
	if x != nil {
		return x.Studentssecondname
	}
	return ""
}

func (x *Comming) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Comming) GetPart() int64 {
	if x != nil {
		return x.Part
	}
	return 0
}

type ReqComming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comming *Comming `protobuf:"bytes,1,opt,name=comming,proto3" json:"comming,omitempty"`
}

func (x *ReqComming) Reset() {
	*x = ReqComming{}
	mi := &file_main_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqComming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqComming) ProtoMessage() {}

func (x *ReqComming) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqComming.ProtoReflect.Descriptor instead.
func (*ReqComming) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{5}
}

func (x *ReqComming) GetComming() *Comming {
	if x != nil {
		return x.Comming
	}
	return nil
}

type TKN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TKN) Reset() {
	*x = TKN{}
	mi := &file_main_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TKN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TKN) ProtoMessage() {}

func (x *TKN) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TKN.ProtoReflect.Descriptor instead.
func (*TKN) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{6}
}

func (x *TKN) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Lesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject           string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Teacherfirstname  string `protobuf:"bytes,2,opt,name=teacherfirstname,proto3" json:"teacherfirstname,omitempty"`
	Teachersecondname string `protobuf:"bytes,3,opt,name=teachersecondname,proto3" json:"teachersecondname,omitempty"`
	Groupnumber       int64  `protobuf:"varint,4,opt,name=groupnumber,proto3" json:"groupnumber,omitempty"`
	Ordernumber       int64  `protobuf:"varint,5,opt,name=ordernumber,proto3" json:"ordernumber,omitempty"`
	Dateday           string `protobuf:"bytes,6,opt,name=dateday,proto3" json:"dateday,omitempty"`
}

func (x *Lesson) Reset() {
	*x = Lesson{}
	mi := &file_main_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lesson) ProtoMessage() {}

func (x *Lesson) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lesson.ProtoReflect.Descriptor instead.
func (*Lesson) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{7}
}

func (x *Lesson) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Lesson) GetTeacherfirstname() string {
	if x != nil {
		return x.Teacherfirstname
	}
	return ""
}

func (x *Lesson) GetTeachersecondname() string {
	if x != nil {
		return x.Teachersecondname
	}
	return ""
}

func (x *Lesson) GetGroupnumber() int64 {
	if x != nil {
		return x.Groupnumber
	}
	return 0
}

func (x *Lesson) GetOrdernumber() int64 {
	if x != nil {
		return x.Ordernumber
	}
	return 0
}

func (x *Lesson) GetDateday() string {
	if x != nil {
		return x.Dateday
	}
	return ""
}

type ReqLesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lesson *Lesson `protobuf:"bytes,1,opt,name=lesson,proto3" json:"lesson,omitempty"`
}

func (x *ReqLesson) Reset() {
	*x = ReqLesson{}
	mi := &file_main_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqLesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLesson) ProtoMessage() {}

func (x *ReqLesson) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLesson.ProtoReflect.Descriptor instead.
func (*ReqLesson) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{8}
}

func (x *ReqLesson) GetLesson() *Lesson {
	if x != nil {
		return x.Lesson
	}
	return nil
}

type Teacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teacherfirstname  string `protobuf:"bytes,1,opt,name=teacherfirstname,proto3" json:"teacherfirstname,omitempty"`
	Teachersecondname string `protobuf:"bytes,2,opt,name=teachersecondname,proto3" json:"teachersecondname,omitempty"`
	Email             string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password          string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Token             string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	Subject           string `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *Teacher) Reset() {
	*x = Teacher{}
	mi := &file_main_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Teacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Teacher) ProtoMessage() {}

func (x *Teacher) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Teacher.ProtoReflect.Descriptor instead.
func (*Teacher) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{9}
}

func (x *Teacher) GetTeacherfirstname() string {
	if x != nil {
		return x.Teacherfirstname
	}
	return ""
}

func (x *Teacher) GetTeachersecondname() string {
	if x != nil {
		return x.Teachersecondname
	}
	return ""
}

func (x *Teacher) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Teacher) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Teacher) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Teacher) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type ReqTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teacher *Teacher `protobuf:"bytes,1,opt,name=teacher,proto3" json:"teacher,omitempty"`
}

func (x *ReqTeacher) Reset() {
	*x = ReqTeacher{}
	mi := &file_main_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTeacher) ProtoMessage() {}

func (x *ReqTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTeacher.ProtoReflect.Descriptor instead.
func (*ReqTeacher) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{10}
}

func (x *ReqTeacher) GetTeacher() *Teacher {
	if x != nil {
		return x.Teacher
	}
	return nil
}

type Mark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject            string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Studentsfirstname  string `protobuf:"bytes,2,opt,name=studentsfirstname,proto3" json:"studentsfirstname,omitempty"`
	Studentssecondname string `protobuf:"bytes,3,opt,name=studentssecondname,proto3" json:"studentssecondname,omitempty"`
	Count              int64  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Comment            string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Part               int64  `protobuf:"varint,6,opt,name=part,proto3" json:"part,omitempty"`
	Date               string `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	Hash               string `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Mark) Reset() {
	*x = Mark{}
	mi := &file_main_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mark) ProtoMessage() {}

func (x *Mark) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mark.ProtoReflect.Descriptor instead.
func (*Mark) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{11}
}

func (x *Mark) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Mark) GetStudentsfirstname() string {
	if x != nil {
		return x.Studentsfirstname
	}
	return ""
}

func (x *Mark) GetStudentssecondname() string {
	if x != nil {
		return x.Studentssecondname
	}
	return ""
}

func (x *Mark) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Mark) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Mark) GetPart() int64 {
	if x != nil {
		return x.Part
	}
	return 0
}

func (x *Mark) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Mark) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ReqMark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mark *Mark `protobuf:"bytes,1,opt,name=mark,proto3" json:"mark,omitempty"`
}

func (x *ReqMark) Reset() {
	*x = ReqMark{}
	mi := &file_main_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqMark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMark) ProtoMessage() {}

func (x *ReqMark) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMark.ProtoReflect.Descriptor instead.
func (*ReqMark) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{12}
}

func (x *ReqMark) GetMark() *Mark {
	if x != nil {
		return x.Mark
	}
	return nil
}

type HelpMark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Part               int64  `protobuf:"varint,1,opt,name=part,proto3" json:"part,omitempty"`
	Studentsfirstname  string `protobuf:"bytes,2,opt,name=studentsfirstname,proto3" json:"studentsfirstname,omitempty"`
	Studentssecondname string `protobuf:"bytes,3,opt,name=studentssecondname,proto3" json:"studentssecondname,omitempty"`
	Subject            string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *HelpMark) Reset() {
	*x = HelpMark{}
	mi := &file_main_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelpMark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpMark) ProtoMessage() {}

func (x *HelpMark) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpMark.ProtoReflect.Descriptor instead.
func (*HelpMark) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{13}
}

func (x *HelpMark) GetPart() int64 {
	if x != nil {
		return x.Part
	}
	return 0
}

func (x *HelpMark) GetStudentsfirstname() string {
	if x != nil {
		return x.Studentsfirstname
	}
	return ""
}

func (x *HelpMark) GetStudentssecondname() string {
	if x != nil {
		return x.Studentssecondname
	}
	return ""
}

func (x *HelpMark) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type ReqHelpMark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Helpmark *HelpMark `protobuf:"bytes,1,opt,name=helpmark,proto3" json:"helpmark,omitempty"`
}

func (x *ReqHelpMark) Reset() {
	*x = ReqHelpMark{}
	mi := &file_main_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqHelpMark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHelpMark) ProtoMessage() {}

func (x *ReqHelpMark) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHelpMark.ProtoReflect.Descriptor instead.
func (*ReqHelpMark) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{14}
}

func (x *ReqHelpMark) GetHelpmark() *HelpMark {
	if x != nil {
		return x.Helpmark
	}
	return nil
}

type HelpLesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dateday string `protobuf:"bytes,1,opt,name=dateday,proto3" json:"dateday,omitempty"`
	Group   int64  `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *HelpLesson) Reset() {
	*x = HelpLesson{}
	mi := &file_main_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelpLesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpLesson) ProtoMessage() {}

func (x *HelpLesson) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpLesson.ProtoReflect.Descriptor instead.
func (*HelpLesson) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{15}
}

func (x *HelpLesson) GetDateday() string {
	if x != nil {
		return x.Dateday
	}
	return ""
}

func (x *HelpLesson) GetGroup() int64 {
	if x != nil {
		return x.Group
	}
	return 0
}

type ReqHelpLesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Helplesson *HelpLesson `protobuf:"bytes,1,opt,name=helplesson,proto3" json:"helplesson,omitempty"`
}

func (x *ReqHelpLesson) Reset() {
	*x = ReqHelpLesson{}
	mi := &file_main_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqHelpLesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHelpLesson) ProtoMessage() {}

func (x *ReqHelpLesson) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHelpLesson.ProtoReflect.Descriptor instead.
func (*ReqHelpLesson) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{16}
}

func (x *ReqHelpLesson) GetHelplesson() *HelpLesson {
	if x != nil {
		return x.Helplesson
	}
	return nil
}

type HelpHomeWork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dateday string `protobuf:"bytes,1,opt,name=dateday,proto3" json:"dateday,omitempty"`
	Group   int64  `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
	Subject string `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *HelpHomeWork) Reset() {
	*x = HelpHomeWork{}
	mi := &file_main_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelpHomeWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpHomeWork) ProtoMessage() {}

func (x *HelpHomeWork) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpHomeWork.ProtoReflect.Descriptor instead.
func (*HelpHomeWork) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{17}
}

func (x *HelpHomeWork) GetDateday() string {
	if x != nil {
		return x.Dateday
	}
	return ""
}

func (x *HelpHomeWork) GetGroup() int64 {
	if x != nil {
		return x.Group
	}
	return 0
}

func (x *HelpHomeWork) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type ReqHelpHomeWork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Helphomework *HelpHomeWork `protobuf:"bytes,1,opt,name=helphomework,proto3" json:"helphomework,omitempty"`
}

func (x *ReqHelpHomeWork) Reset() {
	*x = ReqHelpHomeWork{}
	mi := &file_main_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqHelpHomeWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHelpHomeWork) ProtoMessage() {}

func (x *ReqHelpHomeWork) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHelpHomeWork.ProtoReflect.Descriptor instead.
func (*ReqHelpHomeWork) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{18}
}

func (x *ReqHelpHomeWork) GetHelphomework() *HelpHomeWork {
	if x != nil {
		return x.Helphomework
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_main_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{19}
}

func (x *Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ReqHelp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	New *ReqHelpHomeWork `protobuf:"bytes,1,opt,name=new,proto3" json:"new,omitempty"`
	Old *ReqHelpHomeWork `protobuf:"bytes,2,opt,name=old,proto3" json:"old,omitempty"`
}

func (x *ReqHelp) Reset() {
	*x = ReqHelp{}
	mi := &file_main_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqHelp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHelp) ProtoMessage() {}

func (x *ReqHelp) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHelp.ProtoReflect.Descriptor instead.
func (*ReqHelp) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{20}
}

func (x *ReqHelp) GetNew() *ReqHelpHomeWork {
	if x != nil {
		return x.New
	}
	return nil
}

func (x *ReqHelp) GetOld() *ReqHelpHomeWork {
	if x != nil {
		return x.Old
	}
	return nil
}

type RespHomeWorks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Homeworks []*Homework `protobuf:"bytes,1,rep,name=homeworks,proto3" json:"homeworks,omitempty"`
}

func (x *RespHomeWorks) Reset() {
	*x = RespHomeWorks{}
	mi := &file_main_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespHomeWorks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespHomeWorks) ProtoMessage() {}

func (x *RespHomeWorks) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespHomeWorks.ProtoReflect.Descriptor instead.
func (*RespHomeWorks) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{21}
}

func (x *RespHomeWorks) GetHomeworks() []*Homework {
	if x != nil {
		return x.Homeworks
	}
	return nil
}

type RespComming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commings []*Comming `protobuf:"bytes,1,rep,name=commings,proto3" json:"commings,omitempty"`
}

func (x *RespComming) Reset() {
	*x = RespComming{}
	mi := &file_main_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespComming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespComming) ProtoMessage() {}

func (x *RespComming) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespComming.ProtoReflect.Descriptor instead.
func (*RespComming) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{22}
}

func (x *RespComming) GetCommings() []*Comming {
	if x != nil {
		return x.Commings
	}
	return nil
}

type RespLesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lessons []*Lesson `protobuf:"bytes,1,rep,name=lessons,proto3" json:"lessons,omitempty"`
}

func (x *RespLesson) Reset() {
	*x = RespLesson{}
	mi := &file_main_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespLesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespLesson) ProtoMessage() {}

func (x *RespLesson) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespLesson.ProtoReflect.Descriptor instead.
func (*RespLesson) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{23}
}

func (x *RespLesson) GetLessons() []*Lesson {
	if x != nil {
		return x.Lessons
	}
	return nil
}

type HelpGetLessons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dateday string `protobuf:"bytes,1,opt,name=dateday,proto3" json:"dateday,omitempty"`
	Group   int64  `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *HelpGetLessons) Reset() {
	*x = HelpGetLessons{}
	mi := &file_main_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelpGetLessons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpGetLessons) ProtoMessage() {}

func (x *HelpGetLessons) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpGetLessons.ProtoReflect.Descriptor instead.
func (*HelpGetLessons) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{24}
}

func (x *HelpGetLessons) GetDateday() string {
	if x != nil {
		return x.Dateday
	}
	return ""
}

func (x *HelpGetLessons) GetGroup() int64 {
	if x != nil {
		return x.Group
	}
	return 0
}

type HelpLessonUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old *Lesson `protobuf:"bytes,1,opt,name=old,proto3" json:"old,omitempty"`
	New *Lesson `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
}

func (x *HelpLessonUpdate) Reset() {
	*x = HelpLessonUpdate{}
	mi := &file_main_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelpLessonUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpLessonUpdate) ProtoMessage() {}

func (x *HelpLessonUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpLessonUpdate.ProtoReflect.Descriptor instead.
func (*HelpLessonUpdate) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{25}
}

func (x *HelpLessonUpdate) GetOld() *Lesson {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *HelpLessonUpdate) GetNew() *Lesson {
	if x != nil {
		return x.New
	}
	return nil
}

type RespHelpMark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mark *HelpMark `protobuf:"bytes,1,opt,name=mark,proto3" json:"mark,omitempty"`
}

func (x *RespHelpMark) Reset() {
	*x = RespHelpMark{}
	mi := &file_main_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespHelpMark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespHelpMark) ProtoMessage() {}

func (x *RespHelpMark) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespHelpMark.ProtoReflect.Descriptor instead.
func (*RespHelpMark) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{26}
}

func (x *RespHelpMark) GetMark() *HelpMark {
	if x != nil {
		return x.Mark
	}
	return nil
}

type RespTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teacher *Teacher `protobuf:"bytes,1,opt,name=teacher,proto3" json:"teacher,omitempty"`
}

func (x *RespTeacher) Reset() {
	*x = RespTeacher{}
	mi := &file_main_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespTeacher) ProtoMessage() {}

func (x *RespTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespTeacher.ProtoReflect.Descriptor instead.
func (*RespTeacher) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{27}
}

func (x *RespTeacher) GetTeacher() *Teacher {
	if x != nil {
		return x.Teacher
	}
	return nil
}

var File_main_proto protoreflect.FileDescriptor

var file_main_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd8, 0x01, 0x0a,
	0x08, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x6d,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x74, 0x6f, 0x75, 0x70, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x74, 0x6f, 0x75,
	0x70, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x34, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x48, 0x6f,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0xc8, 0x01,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x73, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x24, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xa9,
	0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x22, 0x30, 0x0a, 0x0a, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0x1b, 0x0a, 0x03,
	0x54, 0x4b, 0x4e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x06, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x61, 0x79, 0x22, 0x2c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x22, 0xc5, 0x01, 0x0a, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x12, 0x2a, 0x0a, 0x10, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x30, 0x0a, 0x0a,
	0x52, 0x65, 0x71, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x07, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x22, 0xea,
	0x01, 0x0a, 0x04, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x24, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x19, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0x96, 0x01, 0x0a, 0x08, 0x48, 0x65, 0x6c, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x72, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x34, 0x0a, 0x0b, 0x52, 0x65,
	0x71, 0x48, 0x65, 0x6c, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x08, 0x68, 0x65, 0x6c,
	0x70, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x48, 0x65,
	0x6c, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x3c, 0x0a, 0x0a, 0x48, 0x65, 0x6c, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x3c,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x48, 0x65, 0x6c, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x0c,
	0x48, 0x65, 0x6c, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x44, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x48, 0x65, 0x6c,
	0x70, 0x48, 0x6f, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x31, 0x0a, 0x0c, 0x68, 0x65, 0x6c,
	0x70, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x0c,
	0x68, 0x65, 0x6c, 0x70, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x22, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x51, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x48, 0x65, 0x6c, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x6e,
	0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x71, 0x48, 0x65,
	0x6c, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x12,
	0x22, 0x0a, 0x03, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52,
	0x65, 0x71, 0x48, 0x65, 0x6c, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x03,
	0x6f, 0x6c, 0x64, 0x22, 0x38, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x12, 0x27, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22, 0x33, 0x0a,
	0x0b, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x2f, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x48, 0x65, 0x6c, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x48, 0x0a, 0x10, 0x48, 0x65, 0x6c, 0x70, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52,
	0x03, 0x6f, 0x6c, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x22,
	0x2d, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x6c, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x12,
	0x1d, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x48, 0x65, 0x6c, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x31,
	0x0a, 0x0b, 0x52, 0x65, 0x73, 0x70, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x32, 0x88, 0x01, 0x0a, 0x0e, 0x48, 0x6f, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0c,
	0x2e, 0x52, 0x65, 0x71, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x1a, 0x09, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x0d, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x48, 0x6f, 0x6d,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x1a, 0x0e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x6f, 0x6d, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x08, 0x2e, 0x52, 0x65, 0x71, 0x48, 0x65, 0x6c,
	0x70, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x72, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x08, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x0c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x20,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x0b, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x9c, 0x01, 0x0a, 0x0d, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x4d, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x52,
	0x65, 0x71, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0f, 0x2e, 0x48, 0x65, 0x6c,
	0x70, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x1a, 0x0b, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x73, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x63, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a,
	0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x08, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x08, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x04,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x08, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x04,
	0x2e, 0x54, 0x4b, 0x4e, 0x32, 0x73, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x4d, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x08, 0x2e,
	0x52, 0x65, 0x71, 0x4d, 0x61, 0x72, 0x6b, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x52,
	0x65, 0x71, 0x48, 0x65, 0x6c, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0c, 0x2e, 0x52,
	0x65, 0x71, 0x48, 0x65, 0x6c, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x1a, 0x0d, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x65, 0x6c, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x32, 0x70, 0x0a, 0x0d, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x52, 0x65, 0x71, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0b, 0x2e, 0x52, 0x65, 0x71, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x1a, 0x0c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x0b, 0x2e, 0x52, 0x65, 0x71, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x04, 0x2e, 0x54, 0x4b, 0x4e, 0x42, 0x08, 0x5a, 0x06, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_main_proto_rawDescOnce sync.Once
	file_main_proto_rawDescData = file_main_proto_rawDesc
)

func file_main_proto_rawDescGZIP() []byte {
	file_main_proto_rawDescOnce.Do(func() {
		file_main_proto_rawDescData = protoimpl.X.CompressGZIP(file_main_proto_rawDescData)
	})
	return file_main_proto_rawDescData
}

var file_main_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_main_proto_goTypes = []any{
	(*Homework)(nil),         // 0: Homework
	(*ReqHomework)(nil),      // 1: ReqHomework
	(*User)(nil),             // 2: User
	(*UserReq)(nil),          // 3: UserReq
	(*Comming)(nil),          // 4: Comming
	(*ReqComming)(nil),       // 5: ReqComming
	(*TKN)(nil),              // 6: TKN
	(*Lesson)(nil),           // 7: Lesson
	(*ReqLesson)(nil),        // 8: ReqLesson
	(*Teacher)(nil),          // 9: Teacher
	(*ReqTeacher)(nil),       // 10: ReqTeacher
	(*Mark)(nil),             // 11: Mark
	(*ReqMark)(nil),          // 12: ReqMark
	(*HelpMark)(nil),         // 13: HelpMark
	(*ReqHelpMark)(nil),      // 14: ReqHelpMark
	(*HelpLesson)(nil),       // 15: HelpLesson
	(*ReqHelpLesson)(nil),    // 16: ReqHelpLesson
	(*HelpHomeWork)(nil),     // 17: HelpHomeWork
	(*ReqHelpHomeWork)(nil),  // 18: ReqHelpHomeWork
	(*Response)(nil),         // 19: Response
	(*ReqHelp)(nil),          // 20: ReqHelp
	(*RespHomeWorks)(nil),    // 21: RespHomeWorks
	(*RespComming)(nil),      // 22: RespComming
	(*RespLesson)(nil),       // 23: RespLesson
	(*HelpGetLessons)(nil),   // 24: HelpGetLessons
	(*HelpLessonUpdate)(nil), // 25: HelpLessonUpdate
	(*RespHelpMark)(nil),     // 26: RespHelpMark
	(*RespTeacher)(nil),      // 27: RespTeacher
}
var file_main_proto_depIdxs = []int32{
	0,  // 0: ReqHomework.homework:type_name -> Homework
	2,  // 1: UserReq.user:type_name -> User
	4,  // 2: ReqComming.comming:type_name -> Comming
	7,  // 3: ReqLesson.lesson:type_name -> Lesson
	9,  // 4: ReqTeacher.teacher:type_name -> Teacher
	11, // 5: ReqMark.mark:type_name -> Mark
	13, // 6: ReqHelpMark.helpmark:type_name -> HelpMark
	15, // 7: ReqHelpLesson.helplesson:type_name -> HelpLesson
	17, // 8: ReqHelpHomeWork.helphomework:type_name -> HelpHomeWork
	18, // 9: ReqHelp.new:type_name -> ReqHelpHomeWork
	18, // 10: ReqHelp.old:type_name -> ReqHelpHomeWork
	0,  // 11: RespHomeWorks.homeworks:type_name -> Homework
	4,  // 12: RespComming.commings:type_name -> Comming
	7,  // 13: RespLesson.lessons:type_name -> Lesson
	7,  // 14: HelpLessonUpdate.old:type_name -> Lesson
	7,  // 15: HelpLessonUpdate.new:type_name -> Lesson
	13, // 16: RespHelpMark.mark:type_name -> HelpMark
	9,  // 17: RespTeacher.teacher:type_name -> Teacher
	1,  // 18: HomeWorkMaking.Create:input_type -> ReqHomework
	17, // 19: HomeWorkMaking.GetHomeWork:input_type -> HelpHomeWork
	20, // 20: HomeWorkMaking.UpdateHomeWork:input_type -> ReqHelp
	5,  // 21: CommingMaking.Create:input_type -> ReqComming
	3,  // 22: CommingMaking.Get:input_type -> UserReq
	5,  // 23: CommingMaking.Remove:input_type -> ReqComming
	8,  // 24: LessonsMaking.Create:input_type -> ReqLesson
	24, // 25: LessonsMaking.Get:input_type -> HelpGetLessons
	24, // 26: LessonsMaking.Update:input_type -> HelpGetLessons
	8,  // 27: LessonsMaking.Delete:input_type -> ReqLesson
	3,  // 28: UserMaking.Register:input_type -> UserReq
	3,  // 29: UserMaking.Login:input_type -> UserReq
	3,  // 30: UserMaking.Auth:input_type -> UserReq
	12, // 31: MarksMaking.Create:input_type -> ReqMark
	14, // 32: MarksMaking.Delete:input_type -> ReqHelpMark
	14, // 33: MarksMaking.Get:input_type -> ReqHelpMark
	10, // 34: TeacherMaking.Create:input_type -> ReqTeacher
	10, // 35: TeacherMaking.Login:input_type -> ReqTeacher
	10, // 36: TeacherMaking.Auth:input_type -> ReqTeacher
	19, // 37: HomeWorkMaking.Create:output_type -> Response
	21, // 38: HomeWorkMaking.GetHomeWork:output_type -> RespHomeWorks
	19, // 39: HomeWorkMaking.UpdateHomeWork:output_type -> Response
	19, // 40: CommingMaking.Create:output_type -> Response
	22, // 41: CommingMaking.Get:output_type -> RespComming
	19, // 42: CommingMaking.Remove:output_type -> Response
	19, // 43: LessonsMaking.Create:output_type -> Response
	23, // 44: LessonsMaking.Get:output_type -> RespLesson
	19, // 45: LessonsMaking.Update:output_type -> Response
	19, // 46: LessonsMaking.Delete:output_type -> Response
	19, // 47: UserMaking.Register:output_type -> Response
	19, // 48: UserMaking.Login:output_type -> Response
	6,  // 49: UserMaking.Auth:output_type -> TKN
	19, // 50: MarksMaking.Create:output_type -> Response
	19, // 51: MarksMaking.Delete:output_type -> Response
	26, // 52: MarksMaking.Get:output_type -> RespHelpMark
	19, // 53: TeacherMaking.Create:output_type -> Response
	27, // 54: TeacherMaking.Login:output_type -> RespTeacher
	6,  // 55: TeacherMaking.Auth:output_type -> TKN
	37, // [37:56] is the sub-list for method output_type
	18, // [18:37] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_main_proto_init() }
func file_main_proto_init() {
	if File_main_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_main_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   6,
		},
		GoTypes:           file_main_proto_goTypes,
		DependencyIndexes: file_main_proto_depIdxs,
		MessageInfos:      file_main_proto_msgTypes,
	}.Build()
	File_main_proto = out.File
	file_main_proto_rawDesc = nil
	file_main_proto_goTypes = nil
	file_main_proto_depIdxs = nil
}
